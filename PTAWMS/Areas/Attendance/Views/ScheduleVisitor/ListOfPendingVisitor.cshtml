@model IEnumerable<PTAWMS.Models.ViewSVisitorEmp>

@{
    ViewBag.Title = "ListOfPendingVisitor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="main-content">
    <div class="main-content-inner">
        <div class="breadcrumbs ace-save-state" id="breadcrumbs">
            <ul class="breadcrumb">
                <li>
                    <i class="ace-icon fa fa-home home-icon"></i>
                    <a href="~/Home/Index">Home</a>
                <li class="active">Visitors Entry</li>
                </li>
                <li class="active">Pending Schedule Visitors</li>
            </ul><!-- /.breadcrumb -->
        </div>
        <div class="page-content">
            <div class="row">
                <div class="col-xs-12">
                    <div class="page-header">
                        <h1>
                            Pending Schedule Visitors
                            <small>
                                <i class="ace-icon fa fa-angle-double-right"></i>
                                List of Pending Schedule Visitors
                                <div class="pull-right tableTools-container"></div>
                                <div class="pull-right">
                                </div>
                            </small>
                        </h1>
                    </div>
                    <!-- div.table-responsive -->
                    <!-- div.dataTables_borderWrap -->
                    <div>
                        <div>
                            <table id="dynamic-table" class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>
                                            Visitor Name
                                        </th>
                                        <th>
                                            Company
                                        </th>
                                        <th>
                                            Vehicle
                                        </th>
                                        <th>
                                            Vehicle #
                                        </th>
                                        <th>
                                            Emp Name
                                        </th>
                                        <th>
                                            Designation
                                        </th>
                                        <th>
                                            Arrival Date
                                        </th>
                                        <th>
                                            Approved Date
                                        </th>
                                        <th>
                                            Status
                                        </th>
                                        <th>Approved|Reject</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.VisitorName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Company)
                                            </td>
                                            <td>
                                                @if (item.VehicleAccess == "true")
                                                {
                                                    <span>Yes</span>
                                                }
                                                else
                                                {
                                                    <span>No</span>
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.VehicleNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.FullName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.DesignationName)
                                            </td>
                                            <td>
                                                @if (item.Arrival_Date != null)
                                                {
                                                    @item.Arrival_Date.Value.ToString("dd-MMM-yyyy")
                                                }
                                            </td>
                                            <td>
                                                @if (item.ApprovedDate != null)
                                                {
                                                    @item.ApprovedDate.Value.ToString("dd-MMM-yyyy")
                                                }
                                            </td>
                                            <td>
                                                @if (item.Status == "Pending")
                                                {<div class="label label-info arrowed-in arrowed-in-right"> @Html.DisplayFor(modelItem => item.Status)</div>}
                                                @if (item.Status == "Approved")
                                                {<div class="label label-success arrowed-in arrowed-in-right"> @Html.DisplayFor(modelItem => item.Status)</div>}
                                                @if (item.Status == "Rejected")
                                                {<div class="label label-danger arrowed-in arrowed-in-right"> @Html.DisplayFor(modelItem => item.Status)</div>}
                                            </td>

                                            <td>
                                                @if (item.Status == "Pending")
                                                {
                                                    @Html.ActionLink(" Approved", "ApprovedVisitor", new { id = item.ID }, new { @class = "btn btn-xs btn-success" })

                                                    @Html.ActionLink(" Reject", "Rejected", new { id = item.ID }, new { @class = "btn btn-xs btn-danger" })
                                                }

                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/assets/js/jquery-2.1.4.min.js"></script>
<!-- inline scripts related to this page -->
<script type="text/javascript">
    $(document).ready(function () {
        //initiate dataTables plugin
        var myTable =
            $('#dynamic-table')
                //.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
                .DataTable();



        $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

        new $.fn.dataTable.Buttons(myTable, {
            buttons: [
                {
                    "extend": "colvis",
                    "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
                    "className": "btn btn-white btn-primary btn-bold",
                    columns: ':not(:first):not(:last)'
                },
                {
                    "extend": "copy",
                    "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
                {
                    "extend": "csv",
                    "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
                {
                    "extend": "excel",
                    "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
                {
                    "extend": "pdf",
                    "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
                    "className": "btn btn-white btn-primary btn-bold"
                },
                {
                    "extend": "print",
                    "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
                    "className": "btn btn-white btn-primary btn-bold",
                    autoPrint: true,
                    message: 'This print was produced using the Print button for DataTables'
                }
            ]
        });
        myTable.buttons().container().appendTo($('.tableTools-container'));

        //style the message box
        var defaultCopyAction = myTable.button(1).action();
        myTable.button(1).action(function (e, dt, button, config) {
            defaultCopyAction(e, dt, button, config);
            $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
        });


        var defaultColvisAction = myTable.button(0).action();
        myTable.button(0).action(function (e, dt, button, config) {

            defaultColvisAction(e, dt, button, config);


            if ($('.dt-button-collection > .dropdown-menu').length == 0) {
                $('.dt-button-collection')
                    .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                    .find('a').attr('href', '#').wrap("<li />")
            }
            $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
        });

        ////

        setTimeout(function () {
            $($('.tableTools-container')).find('a.dt-button').each(function () {
                var div = $(this).find(' > div').first();
                if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
                else $(this).tooltip({ container: 'body', title: $(this).text() });
            });
        }, 500);






    })
</script>