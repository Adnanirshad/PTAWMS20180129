@model IEnumerable<PTAWMS.Models.ViewJobCard>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";    
}
@{ PTAWMS.Models.ViewUserEmp user = (PTAWMS.Models.ViewUserEmp)HttpContext.Current.Session["LoggedUser"]; }
<div class="main-content">
    <div class="main-content-inner">
        <div class="breadcrumbs ace-save-state" id="breadcrumbs">
			<ul class="breadcrumb">
				<li>
					<i class="ace-icon fa fa-home home-icon"></i>
					<a href="~/Home/Index">Home</a>
                    <li class="active">Job Cards</li>
				</li>
				<li class="active">Job Cards History</li>
			</ul><!-- /.breadcrumb -->
		</div>
        <div class="page-content">
         <div class="row">
			<div class="col-xs-12">
                <div class="page-header">
                <h1>
					Job Cards History
					<small>
                        <i class="ace-icon fa fa-angle-double-right"></i>
                        Job Cards History
                         <div class="pull-right tableTools-container"></div>   
                        <div class="pull-right">
                            <div class="pull-right">
                               @* <input type="button" value="Create" class="blue btn btn-white btn-info btn-bold" id="btnCreate" />*@
                               @Html.ActionLink(" Create New", "Create", null, new { @class = " blue btn btn-white btn-info btn-bold",@id="btnCreate" })
                            </div>
                        </div>             												
					</small>
							</h1>
                    </div>
				<!-- div.table-responsive -->

				<!-- div.dataTables_borderWrap -->
				<div>
					<table id="dynamic-table" class="table table-striped table-bordered table-hover">
						<thead>
							<tr>
								<th>
                                    Start Date
                                </th>
                                <th class="hidden-480">
                                    End Date
                                </th>
                                <th  class="hidden-480">
                                    Start Time
                                </th>
                                 <th class="hidden-480">
                                    End Time
                                </th>
                                <th>
                                    Status
                                </th>  
                                <th>
                                    Job Card
                                </th>
                                <th  class="hidden-480">
                                   Created Date
                                </th> 
                                <th class="hidden-480">
                                   Supervisor
                                </th> 
                                 <th class="hidden-480">
                                   @*Edit|*@Cancel
                                </th>               
							</tr>
						</thead>

						<tbody>
                            @foreach (var item in Model)
                            {
                            <tr>
                                <td>
                                    @if(item.DateStarted!=null)
                                    {
                                    @item.DateStarted.Value.ToString("dd-MMM-yyyy")
                                    }
                                </td>
                                <td class="hidden-480">
                                    @if (item.DateEnded != null)
                                    {
                                    @item.DateEnded.Value.ToString("dd-MMM-yyyy")
                                    }
                                </td>
                                <td class="hidden-480">
                                    @if(item.StartTime!=null)
                                    {
                                    @item.StartTime.Value.ToString("hh:mm")
                                    }
                                </td>
                                <td class="hidden-480">
                                    @if(item.EndTime!=null)
                                    {
                                    @item.EndTime.Value.ToString("hh:mm")
                                    }
                                </td>
	                            <td>
                                  @if(item.StatusID=="Pending") {<div class="label label-info arrowed-in arrowed-in-right"> @Html.DisplayFor(modelItem => item.StatusID)</div>}
                                     @if (item.StatusID == "Approved")
                                     {<div class="label label-success arrowed-in arrowed-in-right"> @Html.DisplayFor(modelItem => item.StatusID)</div>}
                                      @if (item.StatusID == "Rejected")
                                     {<div class="label label-danger arrowed-in arrowed-in-right"> @Html.DisplayFor(modelItem => item.StatusID)</div>}
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.JCName)
                                </td>
                                <td class="hidden-480">
                                    @item.DateCreated.Value.ToString("dd-MMM-yyyy")
                                </td>
                                <td class="hidden-480">
                                    @item.SFullName
                                </td>
                                 <td>
                                    @*@if(item.StatusID =="Pending")
                                    {          
                                        @Html.ActionLink(" ", "Edit", new { id=item.JobCardAppID }, new { @class = "ace-icon fa fa-pencil bigger-120 btn btn-xs btn-info" }) 
                                    }*@
                                    @if(item.StatusID =="Pending")
                                    {                                                                              
                                        @Html.ActionLink(" ", "Delete", new { id=item.JobCardAppID }, new { @class = "ace-icon fa fa-trash-o bigger-120 btn btn-xs btn-danger" })
                                    }                     
                                 </td>
                            </tr>
                            }
						</tbody>
					</table>
				</div>
			</div>
		</div>
        </div>
    </div>
</div>
<div id="myModal" class="modal fade" role="dialog" data-toggle="modal" tabindex="-1" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header"></div>
            <div class="modal-body"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script src="~/assets/js/jquery-2.1.4.min.js"></script>
<script type="text/javascript">
    $("#btnCreate").click(function () {
        var urls = LoadUrl('Attendance/JobCard/Create');
        $.ajax({
            type: "GET",
            url: urls,
            success: function (item) {
                $('#modal-body').html(item);
                $('#myModal').modal('show');
            },
            error: function () {
                alert("Dynamic content load failed.");
            }
        });
    });
</script>
		<!-- inline scripts related to this page -->
		<script type="text/javascript">
		    $(document).ready(function () {
		        //initiate dataTables plugin
		        var myTable =
				$('#dynamic-table')
				//.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
				.DataTable({
				    bAutoWidth: false,

				    select: {
				        style: 'multi'
				    }
				});



		        $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

		        new $.fn.dataTable.Buttons(myTable, {
		            buttons: [
					  {
					      "extend": "colvis",
					      "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
					      "className": "btn btn-white btn-primary btn-bold",
					      columns: ':not(:first):not(:last)'
					  },
					  {
					      "extend": "copy",
					      "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
					      "className": "btn btn-white btn-primary btn-bold"
					  },
					  {
					      "extend": "csv",
					      "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
					      "className": "btn btn-white btn-primary btn-bold"
					  },
					  {
					      "extend": "excel",
					      "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
					      "className": "btn btn-white btn-primary btn-bold"
					  },
					  {
					      "extend": "pdf",
					      "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
					      "className": "btn btn-white btn-primary btn-bold"
					  },
					  {
					      "extend": "print",
					      "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
					      "className": "btn btn-white btn-primary btn-bold",
					      autoPrint: true,
					      message: 'This print was produced using the Print button for DataTables'
					  }
		            ]
		        });
		        myTable.buttons().container().appendTo($('.tableTools-container'));

		        //style the message box
		        var defaultCopyAction = myTable.button(1).action();
		        myTable.button(1).action(function (e, dt, button, config) {
		            defaultCopyAction(e, dt, button, config);
		            $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
		        });


		        var defaultColvisAction = myTable.button(0).action();
		        myTable.button(0).action(function (e, dt, button, config) {

		            defaultColvisAction(e, dt, button, config);


		            if ($('.dt-button-collection > .dropdown-menu').length == 0) {
		                $('.dt-button-collection')
						.wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
						.find('a').attr('href', '#').wrap("<li />")
		            }
		            $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
		        });

		        ////

		        setTimeout(function () {
		            $($('.tableTools-container')).find('a.dt-button').each(function () {
		                var div = $(this).find(' > div').first();
		                if (div.length == 1) div.tooltip({ container: 'body', title: div.parent().text() });
		                else $(this).tooltip({ container: 'body', title: $(this).text() });
		            });
		        }, 500);





		        myTable.on('select', function (e, dt, type, index) {
		            if (type === 'row') {
		                $(myTable.row(index).node()).find('input:checkbox').prop('checked', true);
		            }
		        });
		        myTable.on('deselect', function (e, dt, type, index) {
		            if (type === 'row') {
		                $(myTable.row(index).node()).find('input:checkbox').prop('checked', false);
		            }
		        });




		        /////////////////////////////////
		        //table checkboxes
		        $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);

		        //select/deselect all rows according to table header checkbox
		        $('#dynamic-table > thead > tr > th input[type=checkbox], #dynamic-table_wrapper input[type=checkbox]').eq(0).on('click', function () {
		            var th_checked = this.checked;//checkbox inside "TH" table header

		            $('#dynamic-table').find('tbody > tr').each(function () {
		                var row = this;
		                if (th_checked) myTable.row(row).select();
		                else myTable.row(row).deselect();
		            });
		        });

		        //select/deselect a row when the checkbox is checked/unchecked
		        $('#dynamic-table').on('click', 'td input[type=checkbox]', function () {
		            var row = $(this).closest('tr').get(0);
		            if (this.checked) myTable.row(row).deselect();
		            else myTable.row(row).select();
		        });



		        $(document).on('click', '#dynamic-table .dropdown-toggle', function (e) {
		            e.stopImmediatePropagation();
		            e.stopPropagation();
		            e.preventDefault();
		        });



		        //And for the first simple table, which doesn't have TableTools or dataTables
		        //select/deselect all rows according to table header checkbox
		        var active_class = 'active';
		        $('#simple-table > thead > tr > th input[type=checkbox]').eq(0).on('click', function () {
		            var th_checked = this.checked;//checkbox inside "TH" table header

		            $(this).closest('table').find('tbody > tr').each(function () {
		                var row = this;
		                if (th_checked) $(row).addClass(active_class).find('input[type=checkbox]').eq(0).prop('checked', true);
		                else $(row).removeClass(active_class).find('input[type=checkbox]').eq(0).prop('checked', false);
		            });
		        });

		        //select/deselect a row when the checkbox is checked/unchecked
		        $('#simple-table').on('click', 'td input[type=checkbox]', function () {
		            var $row = $(this).closest('tr');
		            if ($row.is('.detail-row ')) return;
		            if (this.checked) $row.addClass(active_class);
		            else $row.removeClass(active_class);
		        });



		        /********************************/
		        //add tooltip for small view action buttons in dropdown menu
		        $('[data-rel="tooltip"]').tooltip({ placement: tooltip_placement });

		        //tooltip placement on right or left
		        function tooltip_placement(context, source) {
		            var $source = $(source);
		            var $parent = $source.closest('table')
		            var off1 = $parent.offset();
		            var w1 = $parent.width();

		            var off2 = $source.offset();
		            //var w2 = $source.width();

		            if (parseInt(off2.left) < parseInt(off1.left) + parseInt(w1 / 2)) return 'right';
		            return 'left';
		        }




		        /***************/
		        $('.show-details-btn').on('click', function (e) {
		            e.preventDefault();
		            $(this).closest('tr').next().toggleClass('open');
		            $(this).find(ace.vars['.icon']).toggleClass('fa-angle-double-down').toggleClass('fa-angle-double-up');
		        });
		        /***************/




		    })
		</script>